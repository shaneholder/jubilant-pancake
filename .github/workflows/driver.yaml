run-name: Terraform Workflow Driver
name: Terraform Workflow Driver
on:
  workflow_dispatch: 
  pull_request:
    paths:
      - 'terraform/proj1/**'
      - 'terraform/proj2/**'
      - '.github/workflows/*.yaml'
    
# Prevent multiple parallel jobs as the terraform lock on the plan will fail      
concurrency:
  group: terraform
  cancel-in-progress: false

permissions:
  pull-requests: write # write permission in order to add comments for terraform output
  id-token: write # write permission is required for az login
  contents: write
      
jobs:

  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changes: ${{ steps.changes.outputs.changes }}
    steps:
      - name: Paths Filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3.0.2
        id: changes
        with:
          filters: |
            proj1:
              - 'terraform/proj1/**'
              - '.github/workflows/*.yaml'
            proj2:
              - 'terraform/proj2/**'
              - '.github/workflows/*.yaml'

  validation:
    needs: [changes]
    uses: ./.github/workflows/terraform-validate.yaml
    strategy:
      matrix:
        workingdir: ${{ fromJSON(needs.changes.outputs.changes) }} 
    with:
      working-dir: ${{ matrix.workingdir }}
      terraform-version: "1.9.5"

  dev-plan:
    needs: [validation, changes]
    uses: ./.github/workflows/terraform-plan.yaml
    strategy:
      matrix:
        workingdir: ${{ fromJSON(needs.changes.outputs.changes) }} 
    with:
      working-dir: "terraform/${{ matrix.workingdir }}"
      terraform-version: "1.9.5"
      environment: development
      saveplan: true
      planName: ${{ github.event.number }}_${{ matrix.workingdir }}_development.out
  dev-apply:
    uses: ./.github/workflows/terraform-apply.yaml
    needs: [dev-plan, changes]
    strategy:
      matrix:
        workingdir: ${{ fromJSON(needs.changes.outputs.changes) }} 
    with:
      working-dir: "terraform/${{ matrix.workingdir }}"
      terraform-version: "1.9.5"
      environment: development
      planName: ${{ github.event.number }}_${{ matrix.workingdir }}_development.out
  prod-plan:
    needs: [validation, changes]
    uses: ./.github/workflows/terraform-plan.yaml
    strategy:
      matrix:
        workingdir: ${{ fromJSON(needs.changes.outputs.changes) }} 
    with:
      working-dir: "terraform/${{ matrix.workingdir }}"
      terraform-version: "1.9.5"
      environment: production 
      saveplan: false  
