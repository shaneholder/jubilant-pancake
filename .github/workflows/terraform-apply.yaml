run-name: Terraform Apply
name: Terraform Apply
on:
  workflow_call:
    inputs:
      working-dir:
        type: string
        required: true
      terraform-version:
        type: string
        required: true
        default: "1.7.3"
      environment:
        type: string
        required: true

permissions:
  id-token: write # write permission is required for az login

jobs:
  apply:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      # Set environment variables for terraform init backend
      ARM_TENANT_ID: ${{vars.AZURE_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_USE_OIDC: true
      ARM_USE_AZUREAD: true # setting so that Storage Blob Data Owner can be used and listkeys action is not required
      WORKING_DIR: ${{inputs.working-dir}}
      # Depending on variables used in terraform add more variables here
      # eg: TF_VAR_AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    defaults:
      run:
        working-directory: ${{inputs.working-dir}}
    permissions:
      pull-requests: write # write permission in order to add comments for terraform output
      id-token: write # write permission is required for az login
    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - uses: actions/checkout@v4
        
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform-version }}

    - name: Load Backend Configuration
      # Allows the usage of envrionemnt variables
      run: cat backends/${{inputs.environment}}.tfbackend >> ${GITHUB_ENV}
    
    - name: Terraform Init
      # To run init ensure that the client id has Storage Blob Data Owner
      # TODO: Minimal permissions required to work, I don't like that the -ro client needs rw access to state storage account
      # Can a different container be used
      id: init
      run: terraform init -backend-config=backends/${{inputs.environment}}.tfbackend -backend-config="storage_account_name=${{vars.STORAGE_ACCOUNT_NAME}}" -backend-config="resource_group_name=${{vars.RESOURCE_GROUP_NAME}}"
    
    - name: Download Plan
      # Store the plan so it can be used in the apply
      uses: azure/cli@v1
      with:
        inlineScript: |
          cd ${{ env.WORKING_DIR }}
          az storage blob download --auth-mode login -f ${{ github.event.number }}.out --account-name ${{ vars.STORAGE_ACCOUNT_NAME }} --container-name plans --name ${{ github.event.number }}_${{inputs.environment}}.out
      
    - name: Terraform Apply
      id: apply
      run: terraform apply ${{ github.event.number }}.out
    
        