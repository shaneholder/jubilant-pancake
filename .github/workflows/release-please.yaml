on:
  push:
    branches:
      - main

concurrency:
  group: terraform
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write
  id-token: write # write permission is required for az login

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
      prs_created: ${{ steps.release.outputs.prs_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - name: Show Release Context
        run: |
          echo <<EOF
            ${{ toJSON (steps.release) }}
          EOF

  prod-plan:
    needs: [release-please]
    if: ${{ needs.release-please.outputs.releases_created }}
    strategy:
      matrix:
        workingdir: ${{ fromJSON(needs.release-please.outputs.paths_released)}}
    uses: ./.github/workflows/terraform-plan.yaml
    with:
      working-dir: ${{matrix.workingdir}}
      terraform-version: "1.9.5"
      environment: production 
      saveplan: true
      planName: production.out

  prod-apply:
    needs: [prod-plan, release-please]
    strategy:
      matrix:
        workingdir: ${{ fromJSON(needs.release-please.outputs.paths_released)}}
    uses: ./.github/workflows/terraform-apply.yaml
    with:
      working-dir: ${{matrix.workingdir}}
      terraform-version: "1.9.5"
      environment: production
      planName: production.out

  # auto-merge:
  #   uses: ./.github/workflows/github-automerge.yaml
  #   needs: [prod-scenario-apply]
  #   with:
  #     branch: ${{ github.head_ref }}
